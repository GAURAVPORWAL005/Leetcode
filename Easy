Brute Force Approach

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int[] a = new int[2];
        for(int i=0;i<nums.length;i++){
            for(int j = i+1;j<nums.length;j++){
                if(nums[i] + nums[j] == target){
                    a[0] = i;
                    a[1] = j;
                }
            }
            
        }
        return a;
    }
}

Optimised Approach

class Solution {
public int[] twoSum(int[] nums, int target) {
HashMap<Integer,Integer> indexMap = new HashMap<Integer,Integer>();
int remaining=0;
for(int i=0;i<nums.length;i++)
{
remaining = target-nums[i];
if(indexMap.containsKey(remaining))
return new int[] {indexMap.get(remaining),i};

        indexMap.put(nums[i],i);       
    }
    return null;
    }
}
